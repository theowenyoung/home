---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
type: Opaque
stringData:
  ADMIN_EMAIL: ${ADMIN_EMAIL}
  ADMIN_PASSWORD: ${ADMIN_PASSWORD}
  SECRET: ${SECRET}
  STORAGE_S3_KEY: ${STORAGE_S3_KEY}
  STORAGE_S3_SECRET: ${STORAGE_S3_SECRET}
  STORAGE_S3_BUCKET: ${STORAGE_S3_BUCKET}
  STORAGE_S3_REGION: ${STORAGE_S3_REGION}
  STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: directus
    app: directus
  name: directus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: directus
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/directus-default: "true"
        io.kompose.service: directus
        app: directus
    spec:
      containers:
        - env:
            - name: STORAGE_LOCATIONS
              value: s3
            - name: STORAGE_LOCALK_DRIVER
              value: local
            - name: STORAGE_LOCAL_ROOT
              value: ./uploads
            - name: STORAGE_S3_DRIVER
              value: s3
            - name: REDIS
              value: redis://redis-service:6379/0
            - name: PUBLIC_URL
              value: https://directus.k3s.owenyoung.com
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: ADMIN_EMAIL
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: ADMIN_PASSWORD
            - name: DB_CLIENT
              value: sqlite3
            - name: DB_FILENAME
              value: /directus/database/data.db
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: SECRET
            - name: WEBSOCKETS_ENABLED
              value: "true"
            - name: STORAGE_S3_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: STORAGE_S3_KEY
            - name: STORAGE_S3_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: STORAGE_S3_SECRET
            - name: STORAGE_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: STORAGE_S3_BUCKET
            - name: STORAGE_S3_REGION
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: STORAGE_S3_REGION
            - name: STORAGE_S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: STORAGE_S3_ENDPOINT
          image: directus/directus:10.12.1
          name: directus
          ports:
            - containerPort: 8055
              hostPort: 8055
              protocol: TCP
          # readinessProbe:
          #   httpGet:
          #     path: /server/health
          #     port: 8055
          #   initialDelaySeconds: 60
          #   timeoutSeconds: 5
          #   periodSeconds: 10
          #   failureThreshold: 6
          volumeMounts:
            - mountPath: /directus/database
              name: directus-claim
              subPath: database
            - mountPath: /directus/uploads
              name: directus-claim
              subPath: uploads
            - mountPath: /directus/extensions
              name: directus-claim
              subPath: extensions

      restartPolicy: Always
      volumes:
        - name: directus-claim
          persistentVolumeClaim:
            claimName: directus-claim

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: directus
    app: directus
  name: directus
spec:
  ports:
    - name: "8055"
      port: 8055
      targetPort: 8055
  selector:
    io.kompose.service: directus

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: directus-ingress
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencryptresolver
spec:
  ingressClassName: traefik
  rules:
    - host: directus.k3s.owenyoung.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: directus
                port:
                  number: 8055
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: directus-claim
  name: directus-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1000Mi
