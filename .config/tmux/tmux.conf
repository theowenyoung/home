# vim style tmux config

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix "C-M-F"
set -g base-index 1
# https://gpanders.com/blog/the-definitive-guide-to-using-tmux-256color-on-macos/
set -g default-terminal "tmux-256color"
# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# auto rename window to current dir
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

set-option -g focus-events on
#set-option -sa terminal-overrides ',xterm-256color:RGB'
# use vim-like keys for splits and windows
bind-key v split-window -h -c '#{pane_current_path}' -p 80
bind-key enter resize-pane -x 80%
bind-key s split-window -v -c '#{pane_current_path}' -l 20


bind-key c new-window
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key o display-popup -E -d '#{pane_current_path}' 'tmux-fzf'
bind-key g display-popup -E -d '#{pane_current_path}' echo rg -F
bind-key P display-popup -d '#{pane_current_path}'
# smart pane switching with awareness of vim splits
bind-key X  kill-session
bind-key D kill-window
bind-key w kill-pane

set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta
set-window-option -g xterm-keys on




# Status Bar
set-option -g status-interval 1
set-option -g status-style bg=black
set-option -g status-style fg=white
set -g status-left '#[fg=green]#H #[default]'
set -g status-right ' #{?client_prefix,#[reverse]<Pre>#[noreverse] ,}%H:%M %Y-%m-%d'
set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# copy and paste
bind Space copy-mode
bind -n C-M-Space copy-mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0
set -sg escape-time 1



# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
